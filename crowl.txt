private boolean isFileFullyUploaded(Path filePath, int retries, long delayMillis) {
    long previousSize = -1;
    for (int i = 0; i < retries; i++) {
        try {
            long currentSize = Files.size(filePath);
            if (currentSize == previousSize) {
                // Если размер файла не изменился, файл загружен
                return true;
            }
            previousSize = currentSize;
            // Ждем перед повторной проверкой
            Thread.sleep(delayMillis);
        } catch (IOException | InterruptedException e) {
            logger.error("Ошибка при проверке загрузки файла: {}", filePath.getFileName(), e);
            return false;
        }
    }
    // Если через несколько попыток файл всё ещё изменяется — ошибка
    return false;
}

private void processCsvFile(Path csvFilePath) {
    // Проверяем, завершена ли загрузка файла
    if (!isFileFullyUploaded(csvFilePath, 5, 2000)) { // 5 попыток с интервалом 2 сек
        logger.error("Файл {} не завершен загрузкой, переносим в папку ошибок", csvFilePath.getFileName());
        moveFile(csvFilePath, Paths.get(errorDir));  // Перемещаем файл в папку ошибок
        return;
    }

    // Если файл полностью загружен, продолжаем его обработку
    // Ваш код по обработке CSV файла
    // ...
}
