dependencies {
    // JavaFX зависимости
    implementation 'org.openjfx:javafx-controls:17.0.2' // Зависимость для JavaFX

    // JFoenix для улучшенных UI-компонентов (например, прогресс-бар)
    implementation 'com.jfoenix:jfoenix:9.0.10'

    // Progress4j для текстовых прогресс-баров в консольных приложениях
    implementation 'org.progressbar:progress4j:1.0.4'

    // Если используете JavaFX с Gradle, вам также нужно будет указать настройку для JavaFX:
    runtimeOnly 'org.openjfx:javafx-graphics:17.0.2'
}

import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.ProgressBar;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import javafx.util.Duration;

public class ProgressBarDemo extends Application {

    private ProgressBar progressBar;
    private Text progressText;

    @Override
    public void start(Stage primaryStage) {
        // 1. JavaFX ProgressBar
        System.out.println("Используем: JavaFX ProgressBar");

        // 2. JFoenix (можно заменить на реальную зависимость JFoenix, если необходимо)
        System.out.println("Используем: JFoenix ProgressBar");

        // 3. Прогресс-бар на основе стандартного Java Swing
        System.out.println("Используем: Java Swing JProgressBar");

        // 4. Прогресс-бар с анимацией (для консольных приложений, например Progress4j)
        System.out.println("Используем: Progress4j (для консоли)");

        // 5. Прогресс-бар с титульной рамкой (кастомная реализация)
        System.out.println("Используем: Кастомный прогресс-бар с титульной рамкой");

        // 6. Создание кастомного прогресс-бара с анимацией в JavaFX
        progressBar = new ProgressBar(0);
        progressBar.setStyle("-fx-accent: #5cb85c; -fx-background-color: #e0e0e0; -fx-background-radius: 10;");
        
        // Текст для отображения прогресса
        progressText = new Text("0%");
        progressText.setFill(Color.DARKGREEN);
        progressText.setStyle("-fx-font-size: 16px;");

        // Анимация прогресс-бара
        Timeline timeline = new Timeline(
                new KeyFrame(Duration.seconds(0), e -> updateProgress(0)),
                new KeyFrame(Duration.seconds(10), e -> updateProgress(1))
        );
        timeline.setCycleCount(Timeline.INDEFINITE);
        timeline.play();

        StackPane root = new StackPane();
        root.getChildren().addAll(progressBar, progressText);

        Scene scene = new Scene(root, 300, 150);
        primaryStage.setTitle("Custom ProgressBar");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void updateProgress(double progress) {
        progressBar.setProgress(progress);
        progressText.setText((int)(progress * 100) + "%");
    }

    public static void main(String[] args) {
        launch(args);
    }
}


