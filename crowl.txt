public void deleteExpiredFile(Path path) {
    String fileName = path.getFileName().toString();

    // Извлекаем расширение файла и маску
    String fileExtension = fileName.substring(fileName.lastIndexOf(".") + 1);
    String fileMask = fileName.replaceAll("\\d", "").replace("." + fileExtension, "");

    FileCategory category = cacheService.getCategoryByMaskAndExtension(fileMask + "YYYYMMddHHmm");

    if (path.toFile().exists()) {
        if (category != null) {
            int categoryDaysToExpire = category.getDaysToExpire();
            try {
                // Проверяем атрибуты файла
                BasicFileAttributes attrs = Files.readAttributes(path, BasicFileAttributes.class);
                Instant accessInstant = attrs.lastAccessTime().toInstant();
                LocalDateTime accessTime = LocalDateTime.ofInstant(accessInstant, ZoneId.systemDefault());
                int daysSinceAccessed = (int) ChronoUnit.DAYS.between(accessTime, LocalDateTime.now());

                // Проверка на истечение срока хранения
                if (daysSinceAccessed > categoryDaysToExpire || daysSinceAccessed > daysToExpire) {
                    try {
                        Files.delete(path);  // Попытка удалить файл
                        logger.info("Удален файл {}", fileName);
                    } catch (IOException e) {
                        // Логируем ошибку, если не удалось удалить файл
                        logger.error("Ошибка при удалении файла {}: {}", fileName, e.getMessage());
                        // Дополнительно, можно в зависимости от ситуации провести попытку повторного удаления или другого действия
                    }
                }
            } catch (IOException e) {
                // Ошибка при чтении атрибутов файла
                logger.error("Ошибка при чтении атрибутов файла {}: {}", fileName, e.getMessage());
            }
        } else {
            logger.warn("Не найдено категории для файла {}", fileName);
        }
    } else {
        logger.warn("Файл {} не существует, пропуск.", fileName);
    }
}
