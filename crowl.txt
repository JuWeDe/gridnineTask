import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.datasource.init.ScriptUtils;
import org.springframework.stereotype.Service;

import javax.annotation.PostConstruct;
import javax.sql.DataSource;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.stream.Collectors;

@Service
public class DatabaseInitializer {

    @Autowired
    private DataSource dataSource;

    @PostConstruct
    public void initializeDatabase() {
        // Чтение data.sql из classpath без использования ResourceLoader
        try (InputStream inputStream = getClass().getClassLoader().getResourceAsStream("data.sql")) {
            if (inputStream == null) {
                throw new IllegalArgumentException("data.sql not found in resources");
            }

            // Преобразуем InputStream в String
            String sqlScript = new BufferedReader(new InputStreamReader(inputStream))
                    .lines()
                    .collect(Collectors.joining("\n"));

            // Выполнение SQL скрипта
            try (Connection connection = dataSource.getConnection()) {
                ScriptUtils.executeSqlScript(connection, new org.springframework.core.io.InputStreamResource(inputStream));
                System.out.println("SQL script executed successfully.");
            } catch (SQLException e) {
                e.printStackTrace();
                System.err.println("Failed to execute SQL script: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Failed to load SQL script: " + e.getMessage());
        }
    }
}
