public void createCopies(Path sourceFilePath, int numberOfCopies) throws IOException {
    File sourceFile = new File(sourceFilePath.toUri());

    if (!sourceFile.exists()) {
        logger.error("Исходный файл не найден: {}", sourceFile.getAbsolutePath());
        throw new FileNotFoundException("Исходный файл не найден: " + sourceFile.getAbsolutePath());
    }

    File targetDir = new File("/home/rsbadin/downloads/FileStorage");
    if (!targetDir.exists() || !targetDir.canWrite()) {
        logger.error("Недостаточно прав для записи в директорию: {}", targetDir.getAbsolutePath());
        throw new IOException("Нет прав на запись в директорию: " + targetDir.getAbsolutePath());
    }

    Matcher matcher = FILE_NAME_PATTERN.matcher(sourceFile.getName());
    if (matcher.find()) {
        String originalBaseName = matcher.group(1);
        String extension = matcher.group(2);

        for (int i = 0; i < numberOfCopies; i++) {
            Calendar calendar = new GregorianCalendar();
            calendar.add(Calendar.MINUTE, i);
            String newDateTime = DATE_TIME_FORMATTER.format(calendar.getTime());
            String newFileName = originalBaseName + "_" + newDateTime + extension;
            File targetFile = new File(targetDir, newFileName);

            Files.copy(sourceFile.toPath(), targetFile.toPath());
            logger.info("Файл успешно создан: {}", targetFile.getAbsolutePath());
        }
    } else {
        logger.error("Неверный формат имени файла: {}", sourceFile.getName());
        throw new IllegalArgumentException("Неверный формат имени файла: " + sourceFile.getName());
    }
}
