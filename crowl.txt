<script>
document.addEventListener('DOMContentLoaded', function () {
    const data = [
        [Date.UTC(2024, 7, 25), 1001.445889, false],
        [Date.UTC(2024, 7, 26), 1100.099495, true],
        [Date.UTC(2024, 7, 27), 1200.972822, false],
        [Date.UTC(2024, 7, 28), 1202.050991, true],
        [Date.UTC(2024, 7, 29), 1300.126883, false],
        [Date.UTC(2024, 7, 30), 1131.201911, true],
        [Date.UTC(2024, 8, 1), 1200.443734, false],
        [Date.UTC(2024, 8, 2), 1250.693109, false],
        [Date.UTC(2024, 8, 3), 1300.461191, true],
        [Date.UTC(2024, 8, 4), 1350.348336, false],
        [Date.UTC(2024, 8, 5), 1400.044603, true],
        [Date.UTC(2024, 8, 6), 1500.154379, false]
    ];

    // Флаг для отображения вертикальных линий
    const showVerticalLines = true;

    // Создаем аннотации на основе данных, где третий элемент равен true
    const annotations = showVerticalLines ? data.filter(point => point[2]).map(point => ({
        shape: 'path',
        pathOptions: {
            stroke: 'gray',
            strokeWidth: 1,
            dashStyle: 'Dash', // Пунктирная линия
            zIndex: 5
        },
        points: [
            { xAxis: 0, yAxis: 0, x: point[0], y: 0 },
            { xAxis: 0, yAxis: 0, x: point[0], y: point[1] }
        ]
    })) : [];

    Highcharts.chart('container', {
        chart: {
            type: 'areaspline'
        },
        title: {
            text: ''
        },
        xAxis: {
            type: 'datetime',
            labels: {
                formatter: function () {
                    let date = new Date(this.value);
                    let day = String(date.getDate()).padStart(2, '0');
                    let month = String(date.getMonth() + 1).padStart(2, '0');
                    let year = date.getFullYear();
                    return `${day}.${month}.${year}`;
                },
                align: 'center'
            },
            tickInterval: 5 * 24 * 3600 * 1000, // Каждые 5 дней
            min: Date.UTC(2024, 7, 25), // Начало оси X
            max: Date.UTC(2024, 8, 6), // Конец оси X
            offset: 20 // Отступ для предотвращения наложения на график
        },
        yAxis: {
            title: {
                text: ''
            },
            tickAmount: 6,
            gridLineWidth: 0,
            offset: 10 // Отступ для предотвращения наложения на график
        },
        tooltip: {
            shared: true,
            valueDecimals: 2
        },
        series: [{
            name: 'Пример данных',
            data: data.map(point => [point[0], point[1]]), // Используем только X и Y для графика
            marker: {
                enabled: true,
                radius: 5,
                symbol: 'circle',
                fillColor: function () {
                    if (this.x === Date.UTC(2024, 7, 25)) {
                        return 'rgba(0, 100, 0, 1)';
                    } else if (this.x === Date.UTC(2024, 8, 6)) {
                        return 'rgba(144, 238, 144, 1)';
                    } else {
                        return null;
                    }
                },
                lineWidth: 0
            },
            dataLabels: {
                enabled: true,
                formatter: function () {
                    if (this.point.x === Date.UTC(2024, 7, 25)) {
                        return `<div style="text-align: center; position: relative; top: 55px;">
                                    <span style="font-size: 16px; color: gray;">${Highcharts.dateFormat('%d.%m.%Y', this.x)}</span><br>
                                    <span style="font-size: 24px; color: black;">${Highcharts.numberFormat(this.y, 2)}</span>
                                </div>`;
                    } else if (this.point.x === Date.UTC(2024, 8, 6)) {
                        return `<div style="text-align: center; position: relative; top: -20px;">
                                    <span style="font-size: 16px; color: gray;">${Highcharts.dateFormat('%d.%m.%Y', this.x)}</span><br>
                                    <span style="font-size: 24px; color: rgba(144, 238, 144, 1);">${Highcharts.numberFormat(this.y, 2)}</span>
                                </div>`;
                    } else {
                        return null;
                    }
                },
                useHTML: true,
                align: 'center'
            }
        }],
        annotations: annotations // Добавляем аннотации автоматически на основе данных
    });
});
</script>
